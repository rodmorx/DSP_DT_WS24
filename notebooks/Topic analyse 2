# Define topic keywords
topic_keywords = {
    "Economy": [
        "Wirtschaft", "Finanzen", "Markt", "Börse", 
        "Inflation", "Investitionen", "Kredite", 
        "Unternehmen", "Arbeitsmarkt", "Globalisierung", 
        "Zinsen", "Finanzkrise", "Banken", 
        "Handelsbilanz", "Export", "Import", 
        "Steuern", "Subventionen", "Devisen", "Währungsumrechnung"
    ],
    "Politics": [
        "Politik", "Regierung", "Partei", "Gesetz", 
        "Minister", "Wahlen", "Demokratie", "Diplomatie", 
        "Internationale Beziehungen", "Rechtssystem", 
        "Verfassung", "Opposition", "Politische Debatte", 
        "Lobbyismus", "Militär", "Sicherheitsrat", 
        "Migration", "Integration", "Freiheitsrechte", "Korruption", "EU", 
        "SDP", "SPD", "CDU", "CSU", "Ukraine", "Russland"
    ],
    "Climate": [
        "Klima", "Umwelt", "Energie", "Treibhausgase", 
        "Klimawandel", "Nachhaltigkeit", "Erneuerbare Energien", 
        "Ökosysteme", "Recycling", "Kohlenstoffneutralität", 
        "Waldsterben", "Meeresspiegel", "Umweltverschmutzung", 
        "Dürre", "Extremwetter", "Emissionen", 
        "Naturschutz", "Biodiversität", "Plastikmüll", "Abfallwirtschaft"
    ],
    "Technology": [
        "Technologie", "Digitalisierung", "KI", "Cybersecurity", 
        "Blockchain", "5G", "Cloud Computing", 
        "Künstliche Intelligenz", "Automatisierung", "Internet der Dinge", 
        "Big Data", "Datenanalyse", "Robotik", 
        "Virtuelle Realität", "Augmented Reality", "Quantencomputer", 
        "Softwareentwicklung", "Kryptographie", "Gaming", "Technologietrends"
    ],
    "Sports": [
        "Sport", "Fußball", "Olympia", "Tor", 
        "Mannschaft", "Training", "Wettkampf", 
        "Athleten", "Fitness", "Rekord", 
        "Laufsport", "Basketball", "Tennis", 
        "E-Sports", "Schwimmen", "Boxen", 
        "Formel 1", "Golf", "Radsport", "Kampfsport"
    ],
    "Health": [
        "Gesundheit", "Medizin", "Pandemie", "Krankenhaus", 
        "Pflege", "Ernährung", "Impfung", 
        "Krankheiten", "Psychische Gesundheit", "Prävention", 
        "Fitness", "Wellness", "Arzneimittel", 
        "Chirurgie", "Therapie", "Schlaf", 
        "Gesundheitsvorsorge", "Mental Health", "Bewegung", "Stressmanagement"
    ],
    "Culture": [
        "Kultur", "Kino", "Musik", "Theater", 
        "Kunst", "Literatur", "Festival", 
        "Mode", "Architektur", "Traditionen", 
        "Tanz", "Fotografie", "Design", 
        "Geschichte", "Mythologie", "Popkultur", 
        "Street Art", "Antike", "Museen", "Sprachkultur"
    ],
    "Crime": [
        "Kriminalität", "Polizei", "Verbrechen", "Gericht", 
        "Mord", "Diebstahl", "Fahndung", 
        "Justiz", "Betrug", "Strafrecht", 
        "Korruption", "Entführung", "Cyberkriminalität", 
        "Drogenhandel", "Organisiertes Verbrechen", "Zeugen", 
        "Untersuchung", "DNA-Analyse", "Haftstrafe", "Rechtsanwalt"
    ],
    "Beauty": [
        "Schönheit", "Kleidung", "Schminken", "Make-up", 
        "Schmuck", "Hautpflege", "Hairstyling", 
        "Trends", "Kosmetik", "Mode", 
        "Nageldesign", "Parfüm", "Anti-Aging", 
        "Haarfarbe", "Stylingprodukte", "Beauty-Tutorials", 
        "Wellness", "Natürliche Schönheit", "Lifestyle", "Makeover"
    ]
}

# Function to assign topics
def assign_topic(text):
    for topic, keywords in topic_keywords.items():
        if any(keyword in text for keyword in keywords):
            return topic
    return "other"

# Add a 'topic' column
df_copy['topic2'] = df_copy['maintext'].apply(assign_topic)

# Inspect topics
print(df_copy[['maintext', 'topic2']].head(20))

# Ergebnisse speichern
df_copy.to_csv("out_with_topic_2.csv", index=False)
print("Datei wurde gespeichert als 'out_with_topic_2.csv'.")

!cp out_with_topic_2.csv /content/drive/MyDrive/
